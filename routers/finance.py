from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from keyboards.inline_keyboard import get_main_menu, finance_keyboard
from db.users import update_finance, get_finance_data


# === –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–æ—É—Ç–µ—Ä–∞ ===
finance_router = Router()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–§–∏–Ω–∞–Ω—Å—ã"
class FinanceForm(StatesGroup):
    category1 = State()
    expenses1 = State()
    category2 = State()
    expenses2 = State()
    category3 = State()
    expenses3 = State()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–§–∏–Ω–∞–Ω—Å—ã"
@finance_router.callback_query(F.data == "finance")
async def start_finance(callback: CallbackQuery, state: FSMContext):
    print(f"DEBUG: –ö–Ω–æ–ø–∫–∞ '–§–∏–Ω–∞–Ω—Å—ã' –Ω–∞–∂–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {callback.from_user.id}")
    await state.set_state(FinanceForm.category1)
    await callback.message.answer("–í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ä–∞—Å—Ö–æ–¥–æ–≤:")
    await callback.answer()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"
@finance_router.callback_query(F.data == "show_finance")
async def show_finance_stats(callback: CallbackQuery):
    tg_id = callback.from_user.id
    finance_data = get_finance_data(tg_id)
    
    if finance_data:
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∫—Ä–∞—Å–∏–≤—ã–π –æ—Ç—á–µ—Ç
        report = f"üí∞ <b>–í–∞—à–∏ —Ä–∞—Å—Ö–æ–¥—ã:</b>\n\n"
        report += f"üìä <b>–û–±—â–∞—è —Å—É–º–º–∞:</b> {finance_data['total']:,.2f} ‚ÇΩ\n\n"
        
        for category, amount, percentage in finance_data['breakdown']:
            # –°–æ–∑–¥–∞–µ–º –≤–∏–∑—É–∞–ª—å–Ω—ã–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø—Ä–æ—Ü–µ–Ω—Ç–∞
            bar_length = int(percentage / 5)  # 5% = 1 —Å–∏–º–≤–æ–ª
            bar = "‚ñà" * bar_length + "‚ñë" * (20 - bar_length)
            
            report += f"üìå <b>{category}:</b>\n"
            report += f"   üíµ {amount:,.2f} ‚ÇΩ ({percentage:.1f}%)\n"
            report += f"   {bar}\n\n"
        
        await callback.message.answer(report, parse_mode="HTML", reply_markup=finance_keyboard())
    else:
        await callback.message.answer("üìù –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ —Ä–∞—Å—Ö–æ–¥–∞—Ö. –ù–∞–∂–º–∏—Ç–µ 'üí∞ –§–∏–Ω–∞–Ω—Å—ã' –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è.", reply_markup=finance_keyboard())
    
    await callback.answer()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" –≤ —Ñ–∏–Ω–∞–Ω—Å–∞—Ö
@finance_router.callback_query(F.data == "main_menu")
async def back_to_main_menu(callback: CallbackQuery):
    await callback.message.edit_text(
        text="üìã –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é. –í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=await get_main_menu()
    )
    await callback.answer()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –ø–µ—Ä–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
@finance_router.message(FinanceForm.category1)
async def category1_handler(message: Message, state: FSMContext):
    await state.update_data(category1=message.text)
    await state.set_state(FinanceForm.expenses1)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ —Ä–∞—Å—Ö–æ–¥—ã –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ 1:")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤
@finance_router.message(FinanceForm.expenses1)
async def expenses1_handler(message: Message, state: FSMContext):
    try:
        expense = float(message.text)
        await state.update_data(expenses1=expense)
        await state.set_state(FinanceForm.category2)
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤—Ç–æ—Ä—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ä–∞—Å—Ö–æ–¥–æ–≤:")
    except ValueError:
        await message.answer("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É (–Ω–∞–ø—Ä–∏–º–µ—Ä: 1000.50)")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –≤—Ç–æ—Ä–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
@finance_router.message(FinanceForm.category2)
async def category2_handler(message: Message, state: FSMContext):
    await state.update_data(category2=message.text)
    await state.set_state(FinanceForm.expenses2)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ —Ä–∞—Å—Ö–æ–¥—ã –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ 2:")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤
@finance_router.message(FinanceForm.expenses2)
async def expenses2_handler(message: Message, state: FSMContext):
    try:
        expense = float(message.text)
        await state.update_data(expenses2=expense)
        await state.set_state(FinanceForm.category3)
        await message.answer("–í–≤–µ–¥–∏—Ç–µ —Ç—Ä–µ—Ç—å—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ä–∞—Å—Ö–æ–¥–æ–≤:")
    except ValueError:
        await message.answer("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É (–Ω–∞–ø—Ä–∏–º–µ—Ä: 1000.50)")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ —Ç—Ä–µ—Ç—å–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
@finance_router.message(FinanceForm.category3)
async def category3_handler(message: Message, state: FSMContext):
    await state.update_data(category3=message.text)
    await state.set_state(FinanceForm.expenses3)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ —Ä–∞—Å—Ö–æ–¥—ã –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ 3:")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤
@finance_router.message(FinanceForm.expenses3)
async def expenses3_handler(message: Message, state: FSMContext):
    try:
        expense = float(message.text)
        await state.update_data(expenses3=expense)
        data = await state.get_data()
        tg_id = message.from_user.id
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
        update_finance(tg_id, data)
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        finance_data = get_finance_data(tg_id)
        
        if finance_data:
            # –§–æ—Ä–º–∏—Ä—É–µ–º –∫—Ä–∞—Å–∏–≤—ã–π –æ—Ç—á–µ—Ç
            report = f"üí∞ <b>–í–∞—à–∏ —Ä–∞—Å—Ö–æ–¥—ã:</b>\n\n"
            report += f"üìä <b>–û–±—â–∞—è —Å—É–º–º–∞:</b> {finance_data['total']:,.2f} ‚ÇΩ\n\n"
            
            for category, amount, percentage in finance_data['breakdown']:
                # –°–æ–∑–¥–∞–µ–º –≤–∏–∑—É–∞–ª—å–Ω—ã–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø—Ä–æ—Ü–µ–Ω—Ç–∞
                bar_length = int(percentage / 5)  # 5% = 1 —Å–∏–º–≤–æ–ª
                bar = "‚ñà" * bar_length + "‚ñë" * (20 - bar_length)
                
                report += f"üìå <b>{category}:</b>\n"
                report += f"   üíµ {amount:,.2f} ‚ÇΩ ({percentage:.1f}%)\n"
                report += f"   {bar}\n\n"
            
            await message.answer(report, parse_mode="HTML")
        else:
            await message.answer("‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!")
            
        await state.clear()
        
    except ValueError:
        await message.answer("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É (–Ω–∞–ø—Ä–∏–º–µ—Ä: 1000.50)")