# from aiogram import Router, F
# from aiogram.filters import Command
# from aiogram.types import Message, CallbackQuery
# from services.cat import get_breed_info, get_cat_image
#
# cat_router = Router()
#
# @cat_router.callback_query(F.data == "cat")
# async def handle_cat(callback: CallbackQuery):
#     await callback.message.answer("–ù–∞–ø–∏—à–∏ –ø–æ—Ä–æ–¥—É –∫–æ—Ç–∞:")
#     await callback.answer()
#
# @cat_router.message(F.text.regexp(r"^[^/].*"))
# async def cat_breed(message: Message):
#     breed_name = message.text
#     breed_info = get_breed_info(breed_name)
#     if breed_info:
#         cat_image = get_cat_image(breed_info["id"])
#         info = (f"–ü–æ—Ä–æ–¥–∞: {breed_info['name']}\n"
#                 f"–û–ø–∏—Å–∞–Ω–∏–µ: {breed_info['description']}\n"
#                 f"–¢–µ–º–ø–µ—Ä–∞–º–µ–Ω—Ç: {breed_info['temperament']}\n"
#                 f"–°—Ç—Ä–∞–Ω–∞: {breed_info['origin']}\n"
#                 f"–°—Å—ã–ª–∫–∞: {breed_info['wikipedia_url']}")
#         await message.answer_photo(photo=cat_image, caption=info)
#     else:
#         await message.answer("–ü–æ—Ä–æ–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")


from aiogram import Router, F
from aiogram.types import CallbackQuery
from keyboards.inline_keyboard import cat_again_keyboard
from services.cat import get_random_breed, get_cat_image

cat_router = Router()

@cat_router.callback_query(F.data == "cat")
async def handle_cat(callback: CallbackQuery):
    breed_info = await get_random_breed()
    if breed_info:
        cat_image = await get_cat_image(breed_info["id"])
        info = (
            f"üê± –ü–æ—Ä–æ–¥–∞: {breed_info['name']}\n"
            f"üìÑ –û–ø–∏—Å–∞–Ω–∏–µ: {breed_info['description']}\n"
            f"üé≠ –¢–µ–º–ø–µ—Ä–∞–º–µ–Ω—Ç: {breed_info['temperament']}\n"
            f"üåç –°—Ç—Ä–∞–Ω–∞: {breed_info['origin']}\n"
            f"üîó –ü–æ–¥—Ä–æ–±–Ω–µ–µ: {breed_info['wikipedia_url']}"
        )
        await callback.message.delete()
        await callback.message.answer_photo(photo=cat_image, caption=info, reply_markup=cat_again_keyboard())
    else:
        await callback.message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ—Ä–æ–¥—É.")
    await callback.answer()


@cat_router.callback_query(F.data == "cat_again")
async def cat_again(callback: CallbackQuery):
    breed_info = await get_random_breed()
    if breed_info:
        cat_image = await get_cat_image(breed_info["id"])
        info = (
            f"üê± –ü–æ—Ä–æ–¥–∞: {breed_info['name']}\n"
            f"üìÑ –û–ø–∏—Å–∞–Ω–∏–µ: {breed_info['description']}\n"
            f"üé≠ –¢–µ–º–ø–µ—Ä–∞–º–µ–Ω—Ç: {breed_info['temperament']}\n"
            f"üåç –°—Ç—Ä–∞–Ω–∞: {breed_info['origin']}\n"
            f"üîó –ü–æ–¥—Ä–æ–±–Ω–µ–µ: {breed_info['wikipedia_url']}"
        )
        await callback.message.answer_photo(photo=cat_image, caption=info, reply_markup=cat_again_keyboard())
    else:
        await callback.message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ—Ä–æ–¥—É.")
    await callback.answer()
